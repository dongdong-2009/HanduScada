<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.com.handu.scada.db.mapper.DeviceHistoryRemotesignallingMapper">
  <resultMap id="BaseResultMap" type="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    <id column="RemoteSignallingId" jdbcType="VARCHAR" property="remotesignallingid" />
    <id column="RecordTime" jdbcType="TIMESTAMP" property="recordtime" />
    <result column="RemoteIndexsId" jdbcType="VARCHAR" property="remoteindexsid" />
    <result column="Value" jdbcType="INTEGER" property="value" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    <result column="Description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RemoteSignallingId, RecordTime, RemoteIndexsId, Value
  </sql>
  <sql id="Blob_Column_List">
    Description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignallingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_history_remotesignalling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignallingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_history_remotesignalling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_history_remotesignalling
    where RemoteSignallingId = #{remotesignallingid,jdbcType=VARCHAR}
      and RecordTime = #{recordtime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from device_history_remotesignalling
    where RemoteSignallingId = #{remotesignallingid,jdbcType=VARCHAR}
      and RecordTime = #{recordtime,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignallingExample">
    delete from device_history_remotesignalling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    insert into device_history_remotesignalling (RemoteSignallingId, RecordTime, 
      RemoteIndexsId, Value, Description
      )
    values (#{remotesignallingid,jdbcType=VARCHAR}, #{recordtime,jdbcType=TIMESTAMP}, 
      #{remoteindexsid,jdbcType=VARCHAR}, #{value,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    insert into device_history_remotesignalling
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="remotesignallingid != null">
        RemoteSignallingId,
      </if>
      <if test="recordtime != null">
        RecordTime,
      </if>
      <if test="remoteindexsid != null">
        RemoteIndexsId,
      </if>
      <if test="value != null">
        Value,
      </if>
      <if test="description != null">
        Description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="remotesignallingid != null">
        #{remotesignallingid,jdbcType=VARCHAR},
      </if>
      <if test="recordtime != null">
        #{recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remoteindexsid != null">
        #{remoteindexsid,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignallingExample" resultType="java.lang.Long">
    select count(*) from device_history_remotesignalling
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_history_remotesignalling
    <set>
      <if test="record.remotesignallingid != null">
        RemoteSignallingId = #{record.remotesignallingid,jdbcType=VARCHAR},
      </if>
      <if test="record.recordtime != null">
        RecordTime = #{record.recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remoteindexsid != null">
        RemoteIndexsId = #{record.remoteindexsid,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        Value = #{record.value,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update device_history_remotesignalling
    set RemoteSignallingId = #{record.remotesignallingid,jdbcType=VARCHAR},
      RecordTime = #{record.recordtime,jdbcType=TIMESTAMP},
      RemoteIndexsId = #{record.remoteindexsid,jdbcType=VARCHAR},
      Value = #{record.value,jdbcType=INTEGER},
      Description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_history_remotesignalling
    set RemoteSignallingId = #{record.remotesignallingid,jdbcType=VARCHAR},
      RecordTime = #{record.recordtime,jdbcType=TIMESTAMP},
      RemoteIndexsId = #{record.remoteindexsid,jdbcType=VARCHAR},
      Value = #{record.value,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    update device_history_remotesignalling
    <set>
      <if test="remoteindexsid != null">
        RemoteIndexsId = #{remoteindexsid,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        Value = #{value,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where RemoteSignallingId = #{remotesignallingid,jdbcType=VARCHAR}
      and RecordTime = #{recordtime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    update device_history_remotesignalling
    set RemoteIndexsId = #{remoteindexsid,jdbcType=VARCHAR},
      Value = #{value,jdbcType=INTEGER},
      Description = #{description,jdbcType=LONGVARCHAR}
    where RemoteSignallingId = #{remotesignallingid,jdbcType=VARCHAR}
      and RecordTime = #{recordtime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.com.handu.scada.db.bean.DeviceHistoryRemotesignalling">
    update device_history_remotesignalling
    set RemoteIndexsId = #{remoteindexsid,jdbcType=VARCHAR},
      Value = #{value,jdbcType=INTEGER}
    where RemoteSignallingId = #{remotesignallingid,jdbcType=VARCHAR}
      and RecordTime = #{recordtime,jdbcType=TIMESTAMP}
  </update>
</mapper>
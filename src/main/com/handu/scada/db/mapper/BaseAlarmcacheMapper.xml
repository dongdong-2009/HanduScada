<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.com.handu.scada.db.mapper.BaseAlarmcacheMapper">
    <resultMap id="BaseResultMap" type="main.com.handu.scada.db.bean.BaseAlarmcache">
        <id column="Oid" jdbcType="VARCHAR" property="oid"/>
        <result column="HappenTime" jdbcType="TIMESTAMP" property="happentime"/>
        <result column="DeviceTableName" jdbcType="VARCHAR" property="devicetablename"/>
        <result column="DeviceAddress" jdbcType="VARCHAR" property="deviceaddress"/>
        <result column="TripReason" jdbcType="VARCHAR" property="tripreason"/>
        <result column="State" jdbcType="INTEGER" property="state"/>
        <result column="Flag" jdbcType="VARCHAR" property="flag"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="main.com.handu.scada.db.bean.BaseAlarmcache">
        <result column="MsgBuff" jdbcType="LONGVARCHAR" property="msgbuff"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    Oid, HappenTime, DeviceTableName, DeviceAddress, TripReason, State, Flag
  </sql>
    <sql id="Blob_Column_List">
    MsgBuff
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="main.com.handu.scada.db.bean.BaseAlarmcacheExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from base_alarmcache
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="main.com.handu.scada.db.bean.BaseAlarmcacheExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from base_alarmcache
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from base_alarmcache
        where Oid = #{oid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from base_alarmcache
    where Oid = #{oid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="main.com.handu.scada.db.bean.BaseAlarmcacheExample">
        delete from base_alarmcache
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="main.com.handu.scada.db.bean.BaseAlarmcache">
    insert into base_alarmcache (Oid, HappenTime, DeviceTableName, 
      DeviceAddress, TripReason, State, 
      Flag, MsgBuff)
    values (#{oid,jdbcType=VARCHAR}, #{happentime,jdbcType=TIMESTAMP}, #{devicetablename,jdbcType=VARCHAR}, 
      #{deviceaddress,jdbcType=VARCHAR}, #{tripreason,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{flag,jdbcType=VARCHAR}, #{msgbuff,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="main.com.handu.scada.db.bean.BaseAlarmcache">
        insert into base_alarmcache
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                Oid,
            </if>
            <if test="happentime != null">
                HappenTime,
            </if>
            <if test="devicetablename != null">
                DeviceTableName,
            </if>
            <if test="deviceaddress != null">
                DeviceAddress,
            </if>
            <if test="tripreason != null">
                TripReason,
            </if>
            <if test="state != null">
                State,
            </if>
            <if test="flag != null">
                Flag,
            </if>
            <if test="msgbuff != null">
                MsgBuff,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                #{oid,jdbcType=VARCHAR},
            </if>
            <if test="happentime != null">
                #{happentime,jdbcType=TIMESTAMP},
            </if>
            <if test="devicetablename != null">
                #{devicetablename,jdbcType=VARCHAR},
            </if>
            <if test="deviceaddress != null">
                #{deviceaddress,jdbcType=VARCHAR},
            </if>
            <if test="tripreason != null">
                #{tripreason,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
            <if test="msgbuff != null">
                #{msgbuff,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="main.com.handu.scada.db.bean.BaseAlarmcacheExample"
            resultType="java.lang.Long">
        select count(*) from base_alarmcache
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update base_alarmcache
        <set>
            <if test="tripEventRecord.oid != null">
                Oid = #{tripEventRecord.oid,jdbcType=VARCHAR},
            </if>
            <if test="tripEventRecord.happentime != null">
                HappenTime = #{tripEventRecord.happentime,jdbcType=TIMESTAMP},
            </if>
            <if test="tripEventRecord.devicetablename != null">
                DeviceTableName = #{tripEventRecord.devicetablename,jdbcType=VARCHAR},
            </if>
            <if test="tripEventRecord.deviceaddress != null">
                DeviceAddress = #{tripEventRecord.deviceaddress,jdbcType=VARCHAR},
            </if>
            <if test="tripEventRecord.tripreason != null">
                TripReason = #{tripEventRecord.tripreason,jdbcType=VARCHAR},
            </if>
            <if test="tripEventRecord.state != null">
                State = #{tripEventRecord.state,jdbcType=INTEGER},
            </if>
            <if test="tripEventRecord.flag != null">
                Flag = #{tripEventRecord.flag,jdbcType=VARCHAR},
            </if>
            <if test="tripEventRecord.msgbuff != null">
                MsgBuff = #{tripEventRecord.msgbuff,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update base_alarmcache
        set Oid = #{tripEventRecord.oid,jdbcType=VARCHAR},
        HappenTime = #{tripEventRecord.happentime,jdbcType=TIMESTAMP},
        DeviceTableName = #{tripEventRecord.devicetablename,jdbcType=VARCHAR},
        DeviceAddress = #{tripEventRecord.deviceaddress,jdbcType=VARCHAR},
        TripReason = #{tripEventRecord.tripreason,jdbcType=VARCHAR},
        State = #{tripEventRecord.state,jdbcType=INTEGER},
        Flag = #{tripEventRecord.flag,jdbcType=VARCHAR},
        MsgBuff = #{tripEventRecord.msgbuff,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update base_alarmcache
        set Oid = #{tripEventRecord.oid,jdbcType=VARCHAR},
        HappenTime = #{tripEventRecord.happentime,jdbcType=TIMESTAMP},
        DeviceTableName = #{tripEventRecord.devicetablename,jdbcType=VARCHAR},
        DeviceAddress = #{tripEventRecord.deviceaddress,jdbcType=VARCHAR},
        TripReason = #{tripEventRecord.tripreason,jdbcType=VARCHAR},
        State = #{tripEventRecord.state,jdbcType=INTEGER},
        Flag = #{tripEventRecord.flag,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="main.com.handu.scada.db.bean.BaseAlarmcache">
        update base_alarmcache
        <set>
            <if test="happentime != null">
                HappenTime = #{happentime,jdbcType=TIMESTAMP},
            </if>
            <if test="devicetablename != null">
                DeviceTableName = #{devicetablename,jdbcType=VARCHAR},
            </if>
            <if test="deviceaddress != null">
                DeviceAddress = #{deviceaddress,jdbcType=VARCHAR},
            </if>
            <if test="tripreason != null">
                TripReason = #{tripreason,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                State = #{state,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                Flag = #{flag,jdbcType=VARCHAR},
            </if>
            <if test="msgbuff != null">
                MsgBuff = #{msgbuff,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where Oid = #{oid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="main.com.handu.scada.db.bean.BaseAlarmcache">
    update base_alarmcache
    set HappenTime = #{happentime,jdbcType=TIMESTAMP},
      DeviceTableName = #{devicetablename,jdbcType=VARCHAR},
      DeviceAddress = #{deviceaddress,jdbcType=VARCHAR},
      TripReason = #{tripreason,jdbcType=VARCHAR},
      State = #{state,jdbcType=INTEGER},
      Flag = #{flag,jdbcType=VARCHAR},
      MsgBuff = #{msgbuff,jdbcType=LONGVARCHAR}
    where Oid = #{oid,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="main.com.handu.scada.db.bean.BaseAlarmcache">
    update base_alarmcache
    set HappenTime = #{happentime,jdbcType=TIMESTAMP},
      DeviceTableName = #{devicetablename,jdbcType=VARCHAR},
      DeviceAddress = #{deviceaddress,jdbcType=VARCHAR},
      TripReason = #{tripreason,jdbcType=VARCHAR},
      State = #{state,jdbcType=INTEGER},
      Flag = #{flag,jdbcType=VARCHAR}
    where Oid = #{oid,jdbcType=VARCHAR}
  </update>
</mapper>
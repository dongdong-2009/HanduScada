<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.com.handu.scada.db.mapper.DeviceRealRemotetelemetryMapper">
  <resultMap id="BaseResultMap" type="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    <id column="RemoteTelemetryId" jdbcType="VARCHAR" property="remotetelemetryid" />
    <result column="RemoteIndexsId" jdbcType="VARCHAR" property="remoteindexsid" />
    <result column="Value" jdbcType="VARCHAR" property="value" />
    <result column="RecordTime" jdbcType="TIMESTAMP" property="recordtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    <result column="Description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RemoteTelemetryId, RemoteIndexsId, Value, RecordTime
  </sql>
  <sql id="Blob_Column_List">
    Description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_real_remotetelemetry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_real_remotetelemetry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_real_remotetelemetry
    where RemoteTelemetryId = #{remotetelemetryid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from device_real_remotetelemetry
    where RemoteTelemetryId = #{remotetelemetryid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetryExample">
    delete from device_real_remotetelemetry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    insert into device_real_remotetelemetry (RemoteTelemetryId, RemoteIndexsId, 
      Value, RecordTime, Description
      )
    values (#{remotetelemetryid,jdbcType=VARCHAR}, #{remoteindexsid,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{recordtime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    insert into device_real_remotetelemetry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="remotetelemetryid != null">
        RemoteTelemetryId,
      </if>
      <if test="remoteindexsid != null">
        RemoteIndexsId,
      </if>
      <if test="value != null">
        Value,
      </if>
      <if test="recordtime != null">
        RecordTime,
      </if>
      <if test="description != null">
        Description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="remotetelemetryid != null">
        #{remotetelemetryid,jdbcType=VARCHAR},
      </if>
      <if test="remoteindexsid != null">
        #{remoteindexsid,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="recordtime != null">
        #{recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetryExample" resultType="java.lang.Long">
    select count(*) from device_real_remotetelemetry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_real_remotetelemetry
    <set>
      <if test="tripEventRecord.remotetelemetryid != null">
        RemoteTelemetryId = #{tripEventRecord.remotetelemetryid,jdbcType=VARCHAR},
      </if>
      <if test="tripEventRecord.remoteindexsid != null">
        RemoteIndexsId = #{tripEventRecord.remoteindexsid,jdbcType=VARCHAR},
      </if>
      <if test="tripEventRecord.value != null">
        Value = #{tripEventRecord.value,jdbcType=VARCHAR},
      </if>
      <if test="tripEventRecord.recordtime != null">
        RecordTime = #{tripEventRecord.recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="tripEventRecord.description != null">
        Description = #{tripEventRecord.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update device_real_remotetelemetry
    set RemoteTelemetryId = #{tripEventRecord.remotetelemetryid,jdbcType=VARCHAR},
      RemoteIndexsId = #{tripEventRecord.remoteindexsid,jdbcType=VARCHAR},
      Value = #{tripEventRecord.value,jdbcType=VARCHAR},
      RecordTime = #{tripEventRecord.recordtime,jdbcType=TIMESTAMP},
      Description = #{tripEventRecord.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_real_remotetelemetry
    set RemoteTelemetryId = #{tripEventRecord.remotetelemetryid,jdbcType=VARCHAR},
      RemoteIndexsId = #{tripEventRecord.remoteindexsid,jdbcType=VARCHAR},
      Value = #{tripEventRecord.value,jdbcType=VARCHAR},
      RecordTime = #{tripEventRecord.recordtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    update device_real_remotetelemetry
    <set>
      <if test="remoteindexsid != null">
        RemoteIndexsId = #{remoteindexsid,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        Value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="recordtime != null">
        RecordTime = #{recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where RemoteTelemetryId = #{remotetelemetryid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    update device_real_remotetelemetry
    set RemoteIndexsId = #{remoteindexsid,jdbcType=VARCHAR},
      Value = #{value,jdbcType=VARCHAR},
      RecordTime = #{recordtime,jdbcType=TIMESTAMP},
      Description = #{description,jdbcType=LONGVARCHAR}
    where RemoteTelemetryId = #{remotetelemetryid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.com.handu.scada.db.bean.DeviceRealRemotetelemetry">
    update device_real_remotetelemetry
    set RemoteIndexsId = #{remoteindexsid,jdbcType=VARCHAR},
      Value = #{value,jdbcType=VARCHAR},
      RecordTime = #{recordtime,jdbcType=TIMESTAMP}
    where RemoteTelemetryId = #{remotetelemetryid,jdbcType=VARCHAR}
  </update>
</mapper>